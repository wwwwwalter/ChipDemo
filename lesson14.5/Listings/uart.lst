C51 COMPILER V9.60.0.0   UART                                                              06/13/2019 17:04:13 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Dev\program\51keil9\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\uart.lst) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          extern unsigned long freq;
   4          extern void UartAction(unsigned char *buf,unsigned char len);
   5          
   6          bit flagFrame=0;
   7          bit flagTxd=0;
   8          unsigned char cntRxd=0;
   9          unsigned char pdata bufRxd[64];
  10          
  11          void UartDriver();
  12          void ConfigUART(unsigned int baud);
  13          void UartRxMonitor(unsigned char ms);
  14          void UartWrite(unsigned char *buf,unsigned char len);
  15          unsigned char UartRead(unsigned char *buf,unsigned char len);
  16          
  17          void ConfigUART(unsigned int baud){
  18   1              SCON=0x50;
  19   1              TMOD&=0x0f;
  20   1              TMOD|=0x20;
  21   1              PCON |=0x80;
  22   1              TH1=256-(freq/12/16)/baud;
  23   1              TL1=TH1;
  24   1              ET1=0;
  25   1              ES=1;
  26   1              TR1=1;
  27   1      }
  28          
  29          void InterruptUART() interrupt 4{
  30   1              if(RI){
  31   2                      RI=0;
  32   2                      if(cntRxd<sizeof(bufRxd)){
  33   3                              bufRxd[cntRxd++]=SBUF;
  34   3                      }
  35   2              }
  36   1              if(TI){
  37   2                      TI=0;
  38   2                      flagTxd=1;
  39   2              }
  40   1      }
  41          
  42          void UartWrite(unsigned char *buf,unsigned char len){
  43   1              while(len--){
  44   2                      flagTxd=0;
  45   2                      SBUF=*buf++;
  46   2                      while(!flagTxd);
  47   2              }
  48   1      }       
  49          
  50          unsigned char UartRead(unsigned char *buf,unsigned char len){
  51   1              unsigned char i;
  52   1              if(len>cntRxd){
  53   2                      len=cntRxd;
  54   2              }
C51 COMPILER V9.60.0.0   UART                                                              06/13/2019 17:04:13 PAGE 2   

  55   1              for(i=0;i<len;++i){
  56   2                      *buf++=bufRxd[i];
  57   2              }
  58   1              cntRxd=0;
  59   1              return len;
  60   1      }
  61          
  62          void UartRxMonitor(unsigned char ms){
  63   1              static unsigned char cntbkp=0;
  64   1              static unsigned char idletmr=0;
  65   1              
  66   1              if(cntRxd>0){
  67   2                      if(cntbkp!=cntRxd){
  68   3                              cntbkp=cntRxd;
  69   3                              idletmr=0;
  70   3                      }else{
  71   3                              if(idletmr<30){
  72   4                                      idletmr+=ms;
  73   4                                      if(idletmr>=30){
  74   5                                              flagFrame=1;
  75   5                                      }
  76   4                              }
  77   3                      }
  78   2              }else{
  79   2                      cntbkp=0;
  80   2              }
  81   1      }
  82          
  83          void UartDriver(){
  84   1              unsigned char len;
  85   1              unsigned char pdata buf[40];
  86   1              if(flagFrame){
  87   2                      flagFrame=0;
  88   2                      len=UartRead(buf,sizeof(buf));
  89   2                      UartAction(buf,len);
  90   2              }
  91   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    310    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     64      40
   DATA SIZE        =      3       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
