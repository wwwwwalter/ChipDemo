C51 COMPILER V9.60.0.0   KEY                                                               06/08/2019 11:04:32 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: C:\Dev\program\51keil9\C51\BIN\C51.EXE key.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\key.lst) OBJECT(.\Objects\key.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          //in
   4          sbit Col0 = P1^4;
   5          sbit Col1 = P1^5;
   6          sbit Col2 = P1^6;
   7          sbit Col3 = P1^7;
   8          //out
   9          sbit Row0 = P1^0;
  10          sbit Row1 = P1^1;
  11          sbit Row2 = P1^2;
  12          sbit Row3 = P1^3;
  13          
  14          unsigned char KeySta[4][4] = {
  15                  {1,1,1,1},
  16                  {1,1,1,1},
  17                  {1,1,1,1},
  18                  {1,1,1,1}
  19          };
  20          
  21          unsigned char code KeyCodeMap[4][4]={
  22                  {'1', '2', '3', 0x26},
  23                  {'4', '5', '6', 0x28},
  24                  {'7', '8', '9', 0x25},
  25                  {'0', 0x1B, 0x0D, 0x27} 
  26          };
  27          
  28          
  29          extern void KeyAction(unsigned char keycode);
  30          
  31          void KeyGet(){
  32   1              unsigned char i,j;
  33   1              static unsigned char backup[4][4]={
  34   1                      {1,1,1,1},
  35   1                      {1,1,1,1},
  36   1                      {1,1,1,1},
  37   1                      {1,1,1,1}
  38   1              };
  39   1              
  40   1              for(i=0;i<4;++i){
  41   2                      for(j=0;j<4;++j){
  42   3                              if(backup[i][j]!=KeySta[i][j]){
  43   4                                      if(backup[i][j]!=0){                                    
  44   5                                              
  45   5                                              KeyAction(KeyCodeMap[i][j]);
  46   5                                      }
  47   4                                      backup[i][j]=KeySta[i][j];
  48   4                              }
  49   3                      }
  50   2              }       
  51   1      }
  52          
  53          void KeyScan(){
  54   1              unsigned char i;
C51 COMPILER V9.60.0.0   KEY                                                               06/08/2019 11:04:32 PAGE 2   

  55   1              static unsigned char keyout=0;
  56   1              static unsigned char keybuf[4][4] = {
  57   1                      {0xff,0xff,0xff,0xff},
  58   1                      {0xff,0xff,0xff,0xff},
  59   1                      {0xff,0xff,0xff,0xff},
  60   1                      {0xff,0xff,0xff,0xff}
  61   1              };
  62   1              
  63   1              keybuf[keyout][0]=(keybuf[keyout][0]<<1)|Col0;
  64   1              keybuf[keyout][1]=(keybuf[keyout][1]<<1)|Col1;
  65   1              keybuf[keyout][2]=(keybuf[keyout][2]<<1)|Col2;
  66   1              keybuf[keyout][3]=(keybuf[keyout][3]<<1)|Col3;
  67   1              
  68   1              for(i = 0;i<4;++i){
  69   2                      if((keybuf[keyout][i]&0x0f)==0x00){
  70   3                              KeySta[keyout][i] = 0;
  71   3                      }else if((keybuf[keyout][i]&0x0f)==0x0f){
  72   3                              KeySta[keyout][i] = 1;
  73   3                      }else{
  74   3                              ;
  75   3                      }
  76   2              }
  77   1              
  78   1              switch(keyout){
  79   2                      case 0:Row0=1;Row1=0;break;
  80   2                      case 1:Row1=1;Row2=0;break;
  81   2                      case 2:Row2=1;Row3=0;break;
  82   2                      case 3:Row3=1;Row0=0;break;
  83   2                      default:break;
  84   2              }
  85   1              
  86   1              keyout++;
  87   1              keyout=keyout&0x03;
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    355    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     49       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
