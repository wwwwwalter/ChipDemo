C51 COMPILER V9.60.0.0   MAIN                                                              06/13/2019 17:04:13 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Dev\program\51keil9\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          
   3          typedef struct msg{
   4                  unsigned char cmd;
   5                  unsigned char len;
   6                  unsigned char *cmdPtr;
   7          }Msg;
   8          
   9          
  10          unsigned long freq=24576000;
  11          unsigned char T0RH=0;
  12          unsigned char T0RL=0;
  13          
  14          void InitShowStr();
  15          void ConfigTimer0(unsigned int ms);
  16          void UartAction(unsigned char *buf,unsigned char len);
  17          void TrimString16(unsigned char *out,unsigned char *in);
  18          bit CmpMemory(unsigned char *ptr1,unsigned char *ptr2,unsigned char len);
  19          
  20          
  21           void LcdInit();
  22          extern void LcdShowStr(unsigned char x,unsigned char y,unsigned char *str);
  23          void LcdAreaClear(unsigned char x,unsigned char y,unsigned char len);
  24          extern void UartDriver();
  25          extern void ConfigUART(unsigned long baud);
  26          extern void UartRxMonitor(unsigned char ms);
  27          extern void UartWrite(unsigned char *buf,unsigned char len);
  28          extern void E2Read(unsigned char *buf,unsigned char addr,unsigned char len);
  29          extern void E2Write(unsigned char *buf,unsigned char addr,unsigned char len);
  30          
  31          void main(){
  32   1      
  33   1              EA=1;
  34   1              ConfigTimer0(1);
  35   1              ConfigUART(9600);
  36   1              LcdInit();
  37   1              InitShowStr();
  38   1              while(1){
  39   2                      UartDriver();
  40   2              }
  41   1      }
  42          
  43          void InitShowStr(){
  44   1              unsigned char str[17];
  45   1              str[16]='\0';
  46   1              E2Read(str,0x20,16);
  47   1              LcdShowStr(0,0,str);
  48   1              E2Read(str,0x40,16);
  49   1              LcdShowStr(0,1,str);
  50   1      }
  51          
  52          bit CmpMemory(unsigned char *ptr1,unsigned char *ptr2,unsigned char len){
  53   1              while(len--){
  54   2                      if(*ptr1++!=*ptr2++){
C51 COMPILER V9.60.0.0   MAIN                                                              06/13/2019 17:04:13 PAGE 2   

  55   3                              return 0;
  56   3                      }
  57   2              }
  58   1              return 1;
  59   1      }
  60          
  61          
  62          void TrimString16(unsigned char *out,unsigned char *in){
  63   1              unsigned char i=0;
  64   1              while(*in!='\0'){
  65   2                      *out++=*in++;
  66   2                      i++;
  67   2                      if(i>=16){
  68   3                              break;
  69   3                      }
  70   2              }
  71   1              for(;i<16;i++){
  72   2                      *out='\0';
  73   2              }
  74   1      }
  75          
  76          void ConfigTimer0(unsigned int ms){
  77   1              unsigned long tmp;
  78   1              tmp=freq/12/1000*ms;
  79   1              tmp=65536-tmp;
  80   1              tmp+=33;
  81   1              
  82   1              T0RH=(unsigned char)(tmp>>8);
  83   1              T0RL=(unsigned char)tmp;
  84   1              TMOD&=0xf0;
  85   1              TMOD|=0x01;
  86   1              TH0=T0RH;
  87   1              TL0=T0RL;
  88   1              ET0=1;
  89   1              TR0=1;
  90   1      }
  91          
  92          void InterruptTimer() interrupt 1{
  93   1              TH0=T0RH;
  94   1              TL0=T0RL;
  95   1              UartRxMonitor(1);
  96   1      }
  97          
  98          
  99          
 100          void UartAction(unsigned char *buf,unsigned char len){
 101   1              unsigned char i;
 102   1              unsigned char str[17];
 103   1              unsigned char code cmd0[]="showstr1 ";
 104   1              unsigned char code cmd1[]="showstr2 ";
 105   1              unsigned char code errStr[]="bad commamd.\n";
 106   1              
 107   1              unsigned char code cmdLen[]={
 108   1                      sizeof(cmd0)-1,
 109   1                      sizeof(cmd1)-1,
 110   1              };
 111   1              
 112   1              unsigned char code *cmdPtr[]={
 113   1                      cmd0,
 114   1                      cmd1,
 115   1              };
 116   1              
C51 COMPILER V9.60.0.0   MAIN                                                              06/13/2019 17:04:13 PAGE 3   

 117   1              for(i=0;i<sizeof(cmdLen);i++){
 118   2                      if(len>=cmdLen[i]){
 119   3                              if(CmpMemory(buf,cmdPtr[i],cmdLen[i])){
 120   4                                      break;
 121   4                              }
 122   3                      }
 123   2              }
 124   1              
 125   1              switch(i){
 126   2                      case 0:                 
 127   2                              buf[len]='\0';
 128   2                              TrimString16(str,buf+cmdLen[0]);
 129   2                              LcdAreaClear(0,0,16);
 130   2                              LcdShowStr(0,0,str);                    
 131   2                              E2Write(str,0x20,sizeof(str));
 132   2                              break;
 133   2                      case 1:
 134   2                              buf[len]='\0';
 135   2                              TrimString16(str,buf+cmdLen[1]);
 136   2                              LcdAreaClear(0,1,16);
 137   2                              LcdShowStr(0,1,str);
 138   2                              E2Write(str,0x40,sizeof(str));
 139   2                              break;
 140   2                      default:                        
 141   2                              UartWrite(errStr,sizeof(errStr)-1);
 142   2                              return;
 143   2              }       
 144   1      }
 145          
 146          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    669    ----
   CONSTANT SIZE    =     40    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      61
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
