C51 COMPILER V9.02   DS1302                                                                06/02/2019 10:31:52 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN DS1302.OBJ
COMPILER INVOKED BY: C:\Dev\program\51\C51\BIN\C51.EXE DS1302.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          unsigned char code LedCharYin[] = {
   3                  0x3f, 0x06, 0x5b, 0x4f,
   4                  0x66, 0x6d, 0x7d, 0x07,
   5                  0x7f, 0x6f, 0x77, 0x7c,
   6                  0x39, 0x5e, 0x79, 0x71
   7          };
   8          
   9          unsigned char LedBuff[8] = {
  10                  0x00,0x00,0x00,0x00,
  11                  0x00,0x00,0x00,0x00
  12          };
  13          //interrupt
  14          bit flag200ms=0;
  15          unsigned char T0RH=0;
  16          unsigned char T0RL=0;
  17          void ConfigTimer0(unsigned int ms);
  18          //DS1302
  19          sbit CE=P3^5;
  20          sbit CLK=P3^6;
  21          sbit IO=P3^7;
  22          
  23          void InitDS1302();
  24          void DS1302ByteWrite(unsigned char dat);
  25          unsigned char DS1302ByteRead();
  26          unsigned char DS1302SingleRead(unsigned char reg);
  27          void DS1302SingleWrite(unsigned char reg,unsigned char dat);
  28          void DS1302BurstRead(unsigned char *dat);
  29          void DS1302BurstWrite(unsigned char *dat);
  30          //Lcd
  31          extern void InitLcd1602();
  32          extern void LcdShowStr(unsigned char x,unsigned char y,unsigned char *str);
  33          
  34          
  35          void main(void){
  36   1              
  37   1              unsigned char psec=0xAA;//1 010 1010
  38   1              unsigned char time[8];
  39   1              //unsigned char str[12];
  40   1      
  41   1              EA=1;
  42   1              ConfigTimer0(1);
  43   1              InitDS1302();
  44   1              //InitLcd1602();
  45   1      
  46   1              while(1){
  47   2                      if(flag200ms){
  48   3                              flag200ms=0;
  49   3                              DS1302BurstRead(time);
  50   3                              if(psec!=time[0]){
  51   4      
  52   4                                      LedBuff[0]=LedCharYin[time[0]&0x0f];
  53   4                                      LedBuff[1]=LedCharYin[time[0]>>4&0x07];                 
  54   4      
  55   4                                      LedBuff[2]=LedCharYin[time[1]&0x0f];
C51 COMPILER V9.02   DS1302                                                                06/02/2019 10:31:52 PAGE 2   

  56   4                                      LedBuff[2]|=0x80;
  57   4                                      LedBuff[3]=LedCharYin[time[1]>>4&0x07];
  58   4      
  59   4                                      LedBuff[4]=LedCharYin[time[2]&0x0f];
  60   4                                      LedBuff[4]|=0x80;
  61   4                                      LedBuff[5]=LedCharYin[time[2]>>4&0x03];
  62   4      
  63   4                                      LedBuff[6]=LedCharYin[time[3]&0x0f];
  64   4                                      LedBuff[6]|=0x80;
  65   4                                      LedBuff[7]=LedCharYin[time[3]>>4&0x03];
  66   4      
  67   4      
  68   4                                      psec=time[0];   
  69   4                              }
  70   3                      }
  71   2              }       
  72   1      }
  73          
  74          void ConfigTimer0(unsigned int ms){
  75   1              unsigned long tmp;
  76   1              tmp=12000000/12/1000*ms;
  77   1              tmp=65536-tmp;
  78   1              tmp+=12;
  79   1              T0RH=(unsigned char)(tmp>>8);
  80   1              T0RL=(unsigned char)tmp;
  81   1              TMOD&=0xf0;
  82   1              TMOD|=0x01;
  83   1              TH0=T0RH;
  84   1              TL0=T0RL;
  85   1              ET0=1;
  86   1              TR0=1;
  87   1      }
  88          
  89          void LedScan(){
  90   1              static unsigned char i=0;
  91   1              P0=0x00;
  92   1              P1=(P1&0xF8)|~i;
  93   1              P0=LedBuff[i];
  94   1              if(i<sizeof(LedBuff)-1){
  95   2                      i++;
  96   2              }else{
  97   2                      i=0;
  98   2              }
  99   1      }
 100          
 101          void InterruptTimer0() interrupt 1{
 102   1              static unsigned char i=0;
 103   1              TH0=T0RH;
 104   1              TL0=T0RL;
 105   1              LedScan();
 106   1              i++;
 107   1              if(i>=200){
 108   2                      i=0;
 109   2                      flag200ms=1;
 110   2              }
 111   1      }
 112          
 113          void InitDS1302(){
 114   1              unsigned char i;
 115   1              unsigned char code InitTime[]={
 116   1                      0x00,0x30,0x09,0x02,0x06,0x07,0x19,
 117   1                      0x00    
C51 COMPILER V9.02   DS1302                                                                06/02/2019 10:31:52 PAGE 3   

 118   1              };
 119   1              CE=0;
 120   1              CLK=0;
 121   1              i=DS1302SingleRead(0);
 122   1              if((i&0x80)!=0){
 123   2                      DS1302SingleWrite(7,0x00);
 124   2                      DS1302BurstWrite(InitTime);
 125   2              }
 126   1              /*
 127   1              else{
 128   1                 DS1302SingleWrite(7,0x00);
 129   1                      for(i=0;i<7;++i){
 130   1                              DS1302SingleWrite(i,InitTime[i]);
 131   1                      }
 132   1              }
 133   1              */      
 134   1      }
 135          
 136          void DS1302ByteWrite(unsigned char dat){
 137   1              unsigned char mask;
 138   1              for(mask=0x01;mask!=0;mask<<=1){
 139   2                      if((mask&dat)!=0){
 140   3                              IO=1;
 141   3                      }else{
 142   3                              IO=0;
 143   3                      }
 144   2                      CLK=1;
 145   2                      CLK=0;
 146   2              }
 147   1              IO=1;
 148   1      }
 149          
 150          unsigned char DS1302ByteRead(){
 151   1              unsigned char mask;
 152   1              unsigned char dat=0;
 153   1              for(mask=0x01;mask!=0;mask<<=1){
 154   2                      if(IO!=0){
 155   3                              dat|=mask;
 156   3                      }
 157   2                      CLK=1;
 158   2                      CLK=0;
 159   2              }
 160   1              return dat;
 161   1      }
 162          
 163          unsigned char DS1302SingleRead(unsigned char reg){
 164   1         unsigned char dat;
 165   1         CE=1;
 166   1         DS1302ByteWrite((reg<<1)|0x81);
 167   1         dat=DS1302ByteRead();
 168   1         CE=0;
 169   1         return dat;
 170   1      }
 171          void DS1302SingleWrite(unsigned char reg,unsigned char dat){
 172   1              CE=1;
 173   1              DS1302ByteWrite((reg<<1)|0x80);
 174   1              DS1302ByteWrite(dat);
 175   1              CE=0;
 176   1      }
 177          
 178          void DS1302BurstWrite(unsigned char *dat){
 179   1              unsigned char i;
C51 COMPILER V9.02   DS1302                                                                06/02/2019 10:31:52 PAGE 4   

 180   1              CE=1;
 181   1              DS1302ByteWrite(0xBE);
 182   1              for(i=0;i<8;++i){
 183   2                      DS1302ByteWrite(dat[i]);
 184   2              }
 185   1              CE=0;
 186   1      }
 187          
 188          void DS1302BurstRead(unsigned char *dat){
 189   1              unsigned char i;
 190   1              CE=1;
 191   1              DS1302ByteWrite(0xBF);
 192   1              for(i=0;i<8;++i){
 193   2                      dat[i]=DS1302ByteRead();
 194   2              }
 195   1              CE=0;
 196   1      }
 197          
 198                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    538    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
